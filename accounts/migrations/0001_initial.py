# Generated by Django 5.2.3 on 2025-09-10 05:49

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CostCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='الرمز / Code')),
                ('name', models.CharField(max_length=100, verbose_name='الاسم / Name')),
                ('name_ar', models.CharField(blank=True, max_length=100, verbose_name='الاسم بالعربية / Arabic Name')),
                ('description', models.TextField(blank=True, verbose_name='الوصف / Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط / Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'مركز التكلفة / Cost Center',
                'verbose_name_plural': 'مراكز التكلفة / Cost Centers',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='اسم الدورة / Course Name')),
                ('name_ar', models.CharField(blank=True, max_length=200, verbose_name='الاسم بالعربية / Arabic Name')),
                ('description', models.TextField(blank=True, verbose_name='الوصف / Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='السعر / Price')),
                ('duration_hours', models.PositiveIntegerField(blank=True, null=True, verbose_name='المدة بالساعات / Duration (Hours)')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط / Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'الدورة / Course',
                'verbose_name_plural': 'الدورات / Courses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DiscountRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=200, unique=True, verbose_name='سبب الحسم / Discount Reason')),
                ('reason_ar', models.CharField(blank=True, max_length=200, verbose_name='السبب بالعربية / Reason in Arabic')),
                ('discount_percent', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))], verbose_name='نسبة الحسم % / Discount Percent')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='قيمة الحسم الثابت / Fixed Discount Amount')),
                ('description', models.TextField(blank=True, verbose_name='الوصف / Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط / Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'قاعدة الحسم / Discount Rule',
                'verbose_name_plural': 'قواعد الحسم / Discount Rules',
                'ordering': ['reason'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True, verbose_name='رقم الطالب / Student ID')),
                ('name', models.CharField(max_length=200, verbose_name='الاسم / Name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='البريد الإلكتروني / Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='الهاتف / Phone')),
                ('address', models.TextField(blank=True, verbose_name='العنوان / Address')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط / Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'الطالب / Student',
                'verbose_name_plural': 'الطلاب / Students',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StudentEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(verbose_name='تاريخ التسجيل / Enrollment Date')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='المبلغ الإجمالي / Total Amount')),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='نسبة الحسم % / Discount Percent')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='قيمة الحسم / Discount Amount')),
                ('payment_method', models.CharField(choices=[('CASH', 'نقد / Cash'), ('BANK', 'بنك / Bank'), ('CARD', 'بطاقة / Card'), ('TRANSFER', 'تحويل / Transfer')], default='CASH', max_length=20, verbose_name='طريقة الدفع / Payment Method')),
                ('notes', models.TextField(blank=True, verbose_name='ملاحظات / Notes')),
                ('is_completed', models.BooleanField(default=False, verbose_name='مكتمل / Completed')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الإكمال / Completion Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'تسجيل الطالب / Student Enrollment',
                'verbose_name_plural': 'تسجيلات الطلاب / Student Enrollments',
                'ordering': ['-enrollment_date'],
            },
        ),
        migrations.CreateModel(
            name='StudentReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(max_length=50, unique=True, verbose_name='رقم الإيصال / Receipt Number')),
                ('date', models.DateField(verbose_name='التاريخ / Date')),
                ('student_name', models.CharField(max_length=200, verbose_name='اسم الطالب / Student Name')),
                ('course_name', models.CharField(blank=True, max_length=200, verbose_name='اسم الدورة / Course Name')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='المبلغ / Amount')),
                ('paid_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='المبلغ المدفوع / Paid Amount')),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='نسبة الحسم % / Discount Percent')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='قيمة الحسم / Discount Amount')),
                ('payment_method', models.CharField(choices=[('CASH', 'نقد / Cash'), ('BANK', 'بنك / Bank'), ('CARD', 'بطاقة / Card'), ('TRANSFER', 'تحويل / Transfer')], default='CASH', max_length=20, verbose_name='طريقة الدفع / Payment Method')),
                ('notes', models.TextField(blank=True, verbose_name='ملاحظات / Notes')),
                ('is_printed', models.BooleanField(default=False, verbose_name='مطبوع / Printed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'إيصال الطالب / Student Receipt',
                'verbose_name_plural': 'إيصالات الطلاب / Student Receipts',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='المبلغ / Amount')),
                ('is_debit', models.BooleanField(verbose_name='مدين / Debit')),
                ('description', models.CharField(blank=True, max_length=500, verbose_name='الوصف / Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'المعاملة / Transaction',
                'verbose_name_plural': 'المعاملات / Transactions',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='رمز الحساب / Account Code')),
                ('name', models.CharField(max_length=200, verbose_name='اسم الحساب / Account Name')),
                ('name_ar', models.CharField(blank=True, max_length=200, verbose_name='الاسم بالعربية / Arabic Name')),
                ('account_type', models.CharField(choices=[('ASSET', 'الأصول / Assets'), ('LIABILITY', 'الخصوم / Liabilities'), ('EQUITY', 'حقوق الملكية / Equity'), ('REVENUE', 'الإيرادات / Revenue'), ('EXPENSE', 'المصروفات / Expenses')], max_length=20, verbose_name='نوع الحساب / Account Type')),
                ('description', models.TextField(blank=True, verbose_name='الوصف / Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط / Active')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='الرصيد / Balance')),
                ('is_course_account', models.BooleanField(default=False, verbose_name='حساب دورة / Course Account')),
                ('course_name', models.CharField(blank=True, max_length=200, verbose_name='اسم الدورة / Course Name')),
                ('is_student_account', models.BooleanField(default=False, verbose_name='حساب طالب / Student Account')),
                ('student_name', models.CharField(blank=True, max_length=200, verbose_name='اسم الطالب / Student Name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='accounts.account', verbose_name='الحساب الأب / Parent Account')),
            ],
            options={
                'verbose_name': 'الحساب / Account',
                'verbose_name_plural': 'الحسابات / Accounts',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='AccountingPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='اسم الفترة / Period Name')),
                ('start_date', models.DateField(verbose_name='تاريخ البداية / Start Date')),
                ('end_date', models.DateField(verbose_name='تاريخ النهاية / End Date')),
                ('is_closed', models.BooleanField(default=False, verbose_name='مقفلة / Closed')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ الإقفال / Closed At')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('closed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='closed_periods', to=settings.AUTH_USER_MODEL, verbose_name='أقفل بواسطة / Closed By')),
            ],
            options={
                'verbose_name': 'الفترة المحاسبية / Accounting Period',
                'verbose_name_plural': 'الفترات المحاسبية / Accounting Periods',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budgeted_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='المبلغ المخطط / Budgeted Amount')),
                ('actual_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='المبلغ الفعلي / Actual Amount')),
                ('notes', models.TextField(blank=True, verbose_name='ملاحظات / Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.account', verbose_name='الحساب / Account')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.accountingperiod', verbose_name='الفترة / Period')),
            ],
            options={
                'verbose_name': 'الميزانية / Budget',
                'verbose_name_plural': 'الميزانيات / Budgets',
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True, verbose_name='المرجع / Reference')),
                ('date', models.DateField(verbose_name='التاريخ / Date')),
                ('description', models.TextField(verbose_name='الوصف / Description')),
                ('entry_type', models.CharField(choices=[('MANUAL', 'يدوي / Manual'), ('ENROLLMENT', 'تسجيل / Enrollment'), ('PAYMENT', 'دفع / Payment'), ('COMPLETION', 'إكمال / Completion'), ('EXPENSE', 'مصروف / Expense'), ('ADJUSTMENT', 'تسوية / Adjustment')], default='MANUAL', max_length=20, verbose_name='نوع القيد / Entry Type')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='المبلغ الإجمالي / Total Amount')),
                ('is_posted', models.BooleanField(default=False, verbose_name='مرحل / Posted')),
                ('posted_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ الترحيل / Posted At')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='أنشئ بواسطة / Created By')),
                ('posted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posted_entries', to=settings.AUTH_USER_MODEL, verbose_name='رحل بواسطة / Posted By')),
            ],
            options={
                'verbose_name': 'قيد اليومية / Journal Entry',
                'verbose_name_plural': 'قيود اليومية / Journal Entries',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True, verbose_name='المرجع / Reference')),
                ('date', models.DateField(verbose_name='التاريخ / Date')),
                ('description', models.CharField(max_length=500, verbose_name='الوصف / Description')),
                ('category', models.CharField(choices=[('SALARY', 'راتب / Salary'), ('TEACHER_SALARY', 'راتب مدرس / Teacher Salary'), ('RENT', 'إيجار / Rent'), ('UTILITIES', 'مرافق / Utilities'), ('SUPPLIES', 'مستلزمات / Supplies'), ('MARKETING', 'تسويق / Marketing'), ('MAINTENANCE', 'صيانة / Maintenance'), ('SALARY', 'راتب / Salary'), ('OTHER', 'أخرى / Other')], max_length=20, verbose_name='الفئة / Category')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='المبلغ / Amount')),
                ('payment_method', models.CharField(choices=[('CASH', 'نقد / Cash'), ('BANK', 'بنك / Bank'), ('CARD', 'بطاقة / Card'), ('TRANSFER', 'تحويل / Transfer')], default='CASH', max_length=20, verbose_name='طريقة الدفع / Payment Method')),
                ('vendor', models.CharField(blank=True, max_length=200, verbose_name='المورد / Vendor')),
                ('receipt_number', models.CharField(blank=True, max_length=100, verbose_name='رقم الفاتورة / Receipt Number')),
                ('notes', models.TextField(blank=True, verbose_name='ملاحظات / Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='أنشئ بواسطة / Created By')),
                ('journal_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses', to='accounts.journalentry', verbose_name='قيد اليومية / Journal Entry')),
            ],
            options={
                'verbose_name': 'قيد المصروف / Expense Entry',
                'verbose_name_plural': 'قيود المصروفات / Expense Entries',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeAdvance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_name', models.CharField(max_length=200, verbose_name='اسم الموظف / Employee Name')),
                ('date', models.DateField(verbose_name='التاريخ / Date')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='المبلغ / Amount')),
                ('purpose', models.CharField(max_length=500, verbose_name='الغرض / Purpose')),
                ('repayment_date', models.DateField(blank=True, null=True, verbose_name='تاريخ السداد / Repayment Date')),
                ('is_repaid', models.BooleanField(default=False, verbose_name='مسدد / Repaid')),
                ('repaid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='المبلغ المسدد / Repaid Amount')),
                ('reference', models.CharField(max_length=50, unique=True, verbose_name='المرجع / Reference')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='أنشئ بواسطة / Created By')),
                ('journal_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='advances', to='accounts.journalentry', verbose_name='قيد اليومية / Journal Entry')),
            ],
            options={
                'verbose_name': 'سلفة الموظف / Employee Advance',
                'verbose_name_plural': 'سلف الموظفين / Employee Advances',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='StudentAccountLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_link', to='accounts.account', verbose_name='الحساب / Account')),
            ],
            options={
                'verbose_name': 'ربط حساب الطالب / Student Account Link',
                'verbose_name_plural': 'روابط حسابات الطلاب / Student Account Links',
            },
        ),
    ]
